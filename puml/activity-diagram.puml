# Диаграмма активности


## Простая активность

Описания активностей начинаются с : и заканчиваются ;.
Само описание может содержать в себе несколько строчек.
Как уже упоминалось выше, дополнительно форматировать текст описания активности возможно, используя синтаксис [creole](https://plantuml.com/ru/creole).
Активности автоматически связаются по порядку их определения.

@startuml

:Привет мир!;

:Эта активность описывается
несколькими **строчками** текста;

:|= Еще один    |= быстрый пример  |
| использования | creole разметки  |;

@enduml


## Старт активности, Стоп активности, Стоп поток, Быстрый стоп

Следующие ключевые слова используются для:
- start - для обозначения начального состояния активности,
- stop - для обозначения конечного состояния активности,
- end - для обозначения конечного состояния потока,
- kill или detach - для быстрого прерывания активности без обозначения каких либо значков.


@startuml
start
:Привет мир!;
:Эта активность описывается
несколькими **строчками** текста;
stop
@enduml


@startuml
start
:Привет мир!;
:Эта активность описывается
несколькими **строчками** текста;
end
@enduml


@startuml
if (условие) then
:Один\nkill;
kill
else
:Два;
endif
:Три\nstop;
stop
@enduml


## Условия (оператор if)

Можно использовать ключевые слова if, then, else и endif, чтобы добавить добавить проверку условия на диаграмму.
Доступно 3 равнозначных варианта записи условия (квадратными скобочками отмечены опциональные поля, которые можно указывать, а можно не указывать):

### 1 вариант записи:
- if (текстУсловия) then [(подписьУспешно)]
- else [(подписьНеУспешно)]
- endif

@startuml

start

if (Graphviz установлен?) then (да)

  :доступны все\n диаграммы;

else (нет)

  :доступны только диаграммы
  __последовательностей__ и __активностей__;

endif

stop

@enduml

### 2 вариант записи
- if (текстУсловия) is (подписьУспешно) then
- else [(подписьНеУспешно)]
- endif

@startuml
if (цвет?) is (<color:red>красный) then
  :пачатаем "красный";
else
  :печатаем "НЕ красный";
endif
@enduml

### 3 вариант записи

- if (текстУсловия) equals (подписьУспешно) then
- else [(подписьНеУспешно)]
- endif

@startuml

if (счетчик?) is (5) then
  :пачатаем "5";
else
  :печатаем "НЕ 5";
endif
@enduml


## Ряд последовательных проверок условий (горизонтальное отображение)
Вы можете использовать ключевое слово elseif, чтобы создать несколько последовательных проверок условий
(по умолчанию используется режим горизонтального отображения):

@startuml
start

if     (условие 1) then (да)
  :Текст 1;
elseif (условие 2) then (да)
  :Срочное\nзавершение;
  stop
elseif (условие 3) then (да)
  :Текст 3;
elseif (условие 4) then (да)
  :Текст 4;
else (ничего не\nподходит)
  :Текст: ничего\nне подошло;
endif

:продолжение;

stop
@enduml

## Ряд последовательных проверок условий (вертикальное отображение)
Используйте опцию !pragma useVerticalIf on для отображения нескольких последовательных проверок условий в вертикальном режиме:

@startuml

!pragma useVerticalIf on
start

if     (условие 1) then (да)
  :Текст 1;
elseif (условие 2) then (да)
  :Срочное\nзавершение;
  stop
elseif (условие 3) then (да)
  :Текст 3;
elseif (условие 4) then (да)
  :Текст 4;
else (ничего не\nподходит)
  :Текст: ничего\nне подошло;
endif

:продолжение;

stop

@enduml

## Перебор множества условий для определенного параметра (оператор switch)
Для добавления в диаграмму перебора множества условий для какого-то одного параметра (конструкция switch-case),
нужно использовать следующие ключевые слова: switch, case, endswitch.

@startuml

start

switch ( число потоков )
case ( равно 1 )
  :1 поток;
case ( равно 2 )
  :2 потока;
case ( равно 3 )
  :3 потока;
case ( равно 4 )
  :4 потока
  ----
  срочное
  завершение
  kill;
  kill
case ( равно 5 )
  :5 потоков;
endswitch

stop

@enduml


## Остановка активности в теле условия
Как уже было продемонстрировано ранее, можно остановить активность на конкретном действии,
используя ключевые слова stop для отображения остановки деятельности или end для отображения остановки потока.

@startuml

if (условие?) then
  :ошибка;
  stop

endif

#palegreen :активность;

@enduml

Если нужно прервать активность на каком-то конкретном действии без отображения каких-либо значков,
нужно использовать идентичные по своему действию ключевые слова kill или detach:
@startuml

if (условие?) then
  #pink :ошибка;
  kill

endif

#palegreen :активность;
@enduml

@startuml
if (условие?) then
  #pink :ошибка;
  detach

endif

#palegreen :активность;
@enduml

# Повторяющийся цикл (с проверкой условия в конце цикла)
Для отображения циклов нужно использовать идентичные по своему действию ключевые слова repeat или repeatwhile:
@startuml

start
repeat

  :чтение данных;

  :построение диаграмм;

repeat while (есть ли еще данные?)
stop

@enduml

Чтобы добавить подписи к стрелочкам после проверки условия, нужно использовать следующую конструкцию:
- repeat while (условие) is (подписьКогдаУспешно) not (подписьКогдаНеУспешно)

@startuml

start

repeat

  :чтение данных;

  :построение диаграмм;

repeat while (есть ли еще данные?) is (да) not (нет)

stop

@enduml


## Прерывание цикла repeat при помощи ключевого слова break
Чтобы прервать цикл после определенного действия, нужно использовать ключевое слово break

@startuml

start

repeat

  :Тестирование;

    if (Что-то пошло не так?) then (нет)
      #palegreen :Тест пройден;
      break
    endif

    ->ошибка;

    :Сообщение: "Длинное сообщение об ошибке";

repeat while (Что-то пошло не так при\nвыводе сообщения об ошибке?) is (да) not (нет)

:Сообщение: "Всё прошло успешно";

stop

@enduml


## Повторяющийся цикл (с проверкой условия в начале цикла)
Для организации цикла с проверкой условия в начале используйте ключевые слова while и end while.
@startuml

start

while (данные доступны?)
  :чтение данных;
  :построение диаграммы;
endwhile

stop

@enduml
@startuml

while (данные доступны?) is (да)

  :чтение данных;
  :построение диаграммы;

endwhile (нет)

:окончание работы;

@enduml


Чтобы добавить к циклу обратное действие, используйте ключевое слово backward
и сразу в той же строке укажите это действие при помощи конструкции :действие;
@startuml

while (данные доступны?) is (да)

  :чтение данных;
  :построение диаграммы;

  backward :очистка экрана;
endwhile (нет)

:окончание работы;

@enduml


Чтобы прервать выполнение цикла, используйте ключевое слово break:
@startuml

while (данные доступны?) is (да)

  :чтение данных;

  if (данные прочитаны?) then (нет)
    #pink :Сообщение об ошибке;
    break
  endif

  :построение диаграммы;

  backward :очистка экрана;
endwhile (нет)

->завершение;

#palegreen :окончание работы;

@enduml


## Заметки

На диаграмму активностей (также, как и на остальные диаграммы) можно добавлять заметки.
Текст внутри заметок можно дополнительно форматировать используя creole и HTML синтаксис.

По умолчанию создаются заметки, которые явно указыавют на элемент, которй был объявлен непосредственно перед объявлением заметки.

Чтобы создать отсоединенную заметку, нужно использовать ключевое слово floating
(она по прежнему будет находится рядом с элементом, но у неё не будет "хвостика" указателя).

@startuml

start
:Действие1;
floating note left: Это отсоединенная заметка
:Действие2;
note right
  Эта заметка длиной в
  //несколько строчек//
  и может содержать
  в себе <b>HTML</b> теги
  и creole синтаксис
  ====
  * Вызов метода ""foo()"" запрещен
end note
stop

@enduml

@startuml
  start
    repeat :Ввод данных;
    :Отправка;
    backward :Предупреждение;
      note right: Заметка о том\nчто что-то пошло нет так
    repeat while (Корректно?) is (Нет) not (Да)
  stop
@enduml

Можно добавлять заметки к разделам:
@startuml
start
partition "**процесс** Привет Мир" {
    note
        Тут наша заметка
        ----
        //Creole тест//
    end note
    :Готовность к отправке;
    :"Привет Мир" -> получатель Х>
    :Привет отправлен;
}
@enduml


## Цвета
Можно задавать цвета для активностей
@startuml

:запуск процесса;

#HotPink:чтение конфигурационных файлов
----
На этом этапе указанные файлы
уже должны быть отредактированы!;

#AAAAAA:остановка процесса;

@enduml


## Изменение цвета и стиля стрелок (синтаксис квадратных скобочек)
Явно объявляя стрелку и указывая для неё дополнительные параметры, можно управлять отображением стрелок между элементами диаграммы.

### Стиль линий
Можно задавать различные стили отображения линий при помощи следующей конструкции:
-[#типЛинии]->

где типЛинии может принимать значения:
- bold - жирный,
- dashed - штриховой,
- dotted - пунктирный,
- hidden - скрытый,
- plain - непрерывный.

### Заметки на линиях
Можно добавлять текстовые подписи к линиям, используя следующую конструкцию:
--> Текст заметки

### Цвет линий
Можно задавать цвет линий при помощи следующей конструкции:
-[#цветЛинии]->

где цветЛинии может принимать текстовые [обозначения цветов](https://plantuml.com/ru/color) или их числовое представление.

@startuml
colors
@enduml

### Полный синтаксис
Можно смешивать все указанные выше параметры, следующим образом:
-[#цветЛинии,типЛинии]-> Текст заметки

@startuml
:Действие1;
-> Можно добавлять\nтекст на стрелки;
if (Условие?) then
  -[#blue]->
  :Действие2;
  -[#green,dashed]-> Текст с //пояснениями//
  на стрелках может быть
  **очень** длинным...;
  :Действие3;
else
  -[#black,dotted]->
  :Действие4.1;
  -[hidden]->
  :Действие4.2;
endif
-[#gray,bold]->
:Действие5;
@enduml


## Коннектор

Можно добавлять на диаграмму специальный элемент - коннектор.
Для этого необходимо использовать круглые скобки.
Чтобы убрать связь между двумя коннекторами, нужно использовать ключевое слово detach.

@startuml
start

:Некоторое действие;

(A)

detach

(A)

:Следующее действие;
@enduml

### Цвет коннектора
@startuml
start

:Коннектор ниже
хочет стать синим;

#blue:(B)

:А следующий коннектор
мечтает быть зеленым;

#green:(G)

stop
@enduml


## Объединение (группировка) активностей

Можно объединять (группировать) активности на диаграмме используя:
- group - группы;
- partition - разделы;
- package - пакеты;
- rectangle - прямоугольники;
- card - карточки.

### Группы
@startuml
start

group Инициализация
    :чтение конфигурационного файла;
    :инициализация внутренних переменных;
end group
group Выполнение
    :ожидание активности пользователя;
    :вывод информации;
end group

stop
@enduml

### Разделы, Пакеты, Прямоугольники и Карточки
@startuml
start

group Группа
  :Действие;
end group
floating note: Заметка для группы

partition Раздел {
  :Действие;
}
floating note: Заметка для раздела

package Пакет {
  :Действие;
}
floating note: Заметка для пакета

rectangle Прямоугольник {
  :Действие;
}
floating note: Заметка для прямоугольника

card Карточа {
  :Действие;
}
floating note: Заметка для карточки

end
@enduml

Для Разделов, Пакетов, Прямоугольников и Карточек можно задавать цвет отображения (для Групп этого сделать нельзя):

@startuml
start

partition #lightGreen Инициализация {
    :чтение конфигурационного файла;
    :инициализация внутренних переменных;
}

partition Выполнение {
    :ожидание активности пользователя;
    :вывод информации;
}

stop
@enduml

Также, в названиях можно использовать [гиперссылки](https://plantuml.com/ru/link):
@startuml
start
partition "[[http://plantuml.com имя_раздела]]" {
    :см документацию на [[http://plantuml.com сайте plantuml]];
    :тестирование диаграммы;
}
end
@enduml



## Дорожки
Можно задать дорожки используя символ |. Также для задаваемых дорожек можно задавать цвета.

@startuml

|Дорожка1|
start
:Действие1;

|#AntiqueWhite|Дорожка2|
:Действие2;
:Действие3;

|Дорожка1|
:Действие4;

|Дорожка2|
:Действие5;
stop

@enduml


Можно использовать дорожки вместе с Условиями и Циклами.

@startuml
|#pink|Актор_для_красного|
start
if (цвет?) is (красный) then
#pink :**красное действие**;
:Действие1;
else (НЕ красный)

|#lightblue|Актор_для_синего|
#lightblue :**синее действие**;
:Действие2;
endif

|Следующий актор|
#lightgray :Действие3;
:Действие4;

|Финальный актор|
#palegreen :Действие5;
stop
@enduml

Также, для того, чтобы каждый раз не писать длинное имя Дорожки, можно задать для дорожки короткое имя и далее использовать везде его.
Сделать это можно используя ключевое слово alias при первом определении Дорожки:

@startuml
|#palegreen|Р| Рыбак
|П| Повар
|#gold|Е| Едок
|Р|

start
:ловит рыбу;

|П|
:жарит рыбу;

|Е|
:ест рыбу;
stop
@enduml
